name: Build and deploy

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macOS-11]

    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      # Used to host cibuildwheel
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.0
        env:
          # configure cibuildwheel to build native archs ('auto'), and some emulated ones
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le
          CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          CIBW_TEST_REQUIRES: .[test]
          CIBW_TEST_COMMAND: pytest {project}
          # arm64 cannot be tested on a x86_64 CI runner
          CIBW_TEST_SKIP: "*-macosx_arm64"
          # pypy will need to be enabled for cibuildwheel 3
          CIBW_ENABLE: pypy
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ matrix.os }}

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: source-dist

  pypi_upload:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4
      with:
        path: dist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        user: __token__
        password: ${{ secrets.pypi_password }}
